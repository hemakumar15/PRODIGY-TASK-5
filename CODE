<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="style.css">
    <script src="script.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/js/all.min.js" defer></script>
</head>
<body>
    <div class="container">
        <h1>Weather App ðŸŒ¦</h1>
        <div class="weather-card">
            <input type="text" id="city-input" placeholder="Enter city name...">
            <button id="search-btn">Search</button>
            <button id="location-btn"><i class="fas fa-map-marker-alt"></i> Use My Location</button>
            <div id="weather-info">
                <h2 id="city-name"></h2>
                <p id="date"></p>
                <img id="weather-icon" src="" alt="Weather Icon">
                <p id="temperature"></p>
                <p id="description"></p>
                <p id="wind-speed"></p>
            </div>
        </div>
    </div>const API_KEY = "YOUR_API_KEY"; // Replace with your actual OpenWeather API key
const BASE_URL = "https://api.openweathermap.org/data/2.5/weather";

// Get DOM elements
const cityInput = document.getElementById("city-input");
const searchBtn = document.getElementById("search-btn");
const locationBtn = document.getElementById("location-btn");
const weatherInfo = document.getElementById("weather-info");

// Fetch weather data based on city name
async function fetchWeather(city) {
    if (!city) {
        alert("Please enter a city name.");
        return;
    }

    const url = `${BASE_URL}?q=${city}&appid=${API_KEY}&units=metric`;
    
    try {
        const response = await fetch(url);
        const data = await response.json();

        if (response.ok) {
            displayWeather(data);
        } else {
            alert("City not found. Try again.");
        }
    } catch (error) {
        console.error("Error fetching weather:", error);
        alert("Something went wrong. Please try again.");
    }
}

// Fetch weather based on user's geolocation
function getLocationWeather() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(async (position) => {
            const { latitude, longitude } = position.coords;
            const url = `${BASE_URL}?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;

            try {
                const response = await fetch(url);
                const data = await response.json();
                if (response.ok) {
                    displayWeather(data);
                } else {
                    alert("Location-based weather not found.");
                }
            } catch (error) {
                console.error("Error fetching location weather:", error);
            }
        }, () => {
            alert("Geolocation access denied. Please enable location services.");
        });
    } else {
        alert("Geolocation is not supported by your browser.");
    }
}

// Display weather data
function displayWeather(data) {
    document.getElementById("city-name").textContent = data.name;
    document.getElementById("date").textContent = new Date().toLocaleString();
    document.getElementById("temperature").textContent = `${data.main.temp}Â°C`;
    document.getElementById("description").textContent = data.weather[0].description;
    document.getElementById("wind-speed").textContent = `Wind Speed: ${data.wind.speed} m/s`;
    document.getElementById("weather-icon").src = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;
    
    weatherInfo.style.display = "block";
}

// Event listeners
searchBtn.addEventListener("click", () => fetchWeather(cityInput.value));
locationBtn.addEventListener("click", getLocationWeather);
cityInput.addEventListener("keypress", (event) => {
    if (event.key === "Enter") fetchWeather(cityInput.value);
});


/* General Styles */
body {
    font-family: 'Arial', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background: linear-gradient(135deg, #4CAF50, #2196F3);
    color: #fff;
}

/* Container */
.container {
    text-align: center;
    width: 100%;
    max-width: 500px;
}

/* Weather Card */
.weather-card {
    background: rgba(255, 255, 255, 0.9);
    padding: 20px;
    border-radius: 15px;
    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.3);
    color: #333;
    transition: transform 0.3s ease-in-out;
}

.weather-card:hover {
    transform: scale(1.03);
}

/* Input Field */
#city-input {
    width: 80%;
    padding: 10px;
    font-size: 16px;
    margin: 10px 0;
    border: 2px solid #2196F3;
    border-radius: 8px;
    text-align: center;
}

/* Buttons */
button {
    padding: 10px;
    margin: 5px;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

#search-btn {
    background: #2196F3;
    color: #fff;
}

#search-btn:hover {
    background: #1565C0;
}

#location-btn {
    background: #4CAF50;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
}

#location-btn:hover {
    background: #2E7D32;
}

/* Weather Info */
#weather-info {
    display: none;
    margin-top: 15px;
}

#weather-icon {
    width: 100px;
    height: 100px;
}

#temperature {
    font-size: 26px;
    font-weight: bold;
}

#description {
    font-size: 18px;
    font-style: italic;
}

#wind-speed {
    font-size: 16px;
    color: red;
}

/* Responsive Design */
@media screen and (max-width: 480px) {
    .weather-card {
        padding: 15px;
    }
    #city-input {
        width: 100%;
    }
}

</body>
</html>
    

